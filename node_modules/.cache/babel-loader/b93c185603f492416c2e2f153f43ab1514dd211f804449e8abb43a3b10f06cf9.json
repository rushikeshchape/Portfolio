{"ast":null,"code":"var _jsxFileName = \"R:\\\\ReactJs\\\\portfolio\\\\src\\\\component\\\\Contact.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm, ValidationError } from '@formspree/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [state, handleSubmit] = useForm(\"mpzvllnp\");\n  if (state.succeeded) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Thanks for joining!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginTop: '100px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n        prefix: \"Email\",\n        field: \"email\",\n        errors: state.errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"message\",\n        name: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n        prefix: \"Message\",\n        field: \"message\",\n        errors: state.errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: state.submitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Contact, \"SzbQxrvQUV4DSvQQhTwcmgv5UiE=\", false, function () {\n  return [useForm];\n});\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useForm","ValidationError","jsxDEV","_jsxDEV","Fragment","_Fragment","Contact","_s","state","handleSubmit","succeeded","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","marginTop","htmlFor","id","type","name","prefix","field","errors","disabled","submitting","_c","$RefreshReg$"],"sources":["R:/ReactJs/portfolio/src/component/Contact.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useForm, ValidationError } from '@formspree/react';\r\n\r\n\r\nconst Contact = ()=>{\r\nconst [state, handleSubmit] = useForm(\"mpzvllnp\");\r\n  if (state.succeeded) {\r\n      return <p>Thanks for joining!</p>;\r\n  }\r\n  return(\r\n  <>\r\n      <form onSubmit={handleSubmit} style={{marginTop:'100px'}}>\r\n      <label htmlFor=\"email\">\r\n        Email Address\r\n      </label>\r\n      <input\r\n        id=\"email\"\r\n        type=\"email\" \r\n        name=\"email\"\r\n      />\r\n      <ValidationError \r\n        prefix=\"Email\" \r\n        field=\"email\"\r\n        errors={state.errors}\r\n      />\r\n      <textarea\r\n        id=\"message\"\r\n        name=\"message\"\r\n      />\r\n      <ValidationError \r\n        prefix=\"Message\" \r\n        field=\"message\"\r\n        errors={state.errors}\r\n      />\r\n      <button type=\"submit\" disabled={state.submitting}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n    </>\r\n  )\r\n}\r\nexport default Contact;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5D,MAAMC,OAAO,GAAGA,CAAA,KAAI;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,YAAY,CAAC,GAAGT,OAAO,CAAC,UAAU,CAAC;EAC/C,IAAIQ,KAAK,CAACE,SAAS,EAAE;IACjB,oBAAOP,OAAA;MAAAQ,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrC;EACA,oBACAZ,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACIR,OAAA;MAAMa,QAAQ,EAAEP,YAAa;MAACQ,KAAK,EAAE;QAACC,SAAS,EAAC;MAAO,CAAE;MAAAP,QAAA,gBACzDR,OAAA;QAAOgB,OAAO,EAAC,OAAO;QAAAR,QAAA,EAAC;MAEvB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRZ,OAAA;QACEiB,EAAE,EAAC,OAAO;QACVC,IAAI,EAAC,OAAO;QACZC,IAAI,EAAC;MAAO;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACFZ,OAAA,CAACF,eAAe;QACdsB,MAAM,EAAC,OAAO;QACdC,KAAK,EAAC,OAAO;QACbC,MAAM,EAAEjB,KAAK,CAACiB;MAAO;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFZ,OAAA;QACEiB,EAAE,EAAC,SAAS;QACZE,IAAI,EAAC;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACFZ,OAAA,CAACF,eAAe;QACdsB,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAC,SAAS;QACfC,MAAM,EAAEjB,KAAK,CAACiB;MAAO;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFZ,OAAA;QAAQkB,IAAI,EAAC,QAAQ;QAACK,QAAQ,EAAElB,KAAK,CAACmB,UAAW;QAAAhB,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACL,CAAC;AAEP,CAAC;AAAAR,EAAA,CApCKD,OAAO;EAAA,QACiBN,OAAO;AAAA;AAAA4B,EAAA,GAD/BtB,OAAO;AAqCb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}